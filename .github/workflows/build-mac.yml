name: build-mac

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-mac:
    name: macOS ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            arch: x64
          - os: macos-14
            arch: arm64
    env:
      DEBUG: 'electron-builder'
      CSC_IDENTITY_AUTO_DISCOVERY: 'false'
      npm_config_python: '/usr/bin/python3'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --fetch-timeout=600000 --cache-max=0

      - name: Prefetch Electron headers for node-gyp (with retry)
        shell: bash
        run: |
          for i in {1..3}; do
            npx node-gyp install --target=28.3.3 --dist-url=https://electronjs.org/headers && break || sleep 5;
          done

      - name: Rebuild native deps for Electron (better-sqlite3)
        shell: bash
        run: |
          for i in {1..3}; do
            npx electron-rebuild -f -w better-sqlite3 --version=28.3.3 --arch=${{ matrix.arch }} && break || sleep 5;
          done

      - name: Clean dist folder (cross-platform)
        shell: bash
        run: node -e "require('fs').rmSync('dist',{recursive:true,force:true})"

      - name: Build (TypeScript main)
        run: npm run build:main

      - name: Build (Vite renderer)
        run: npm run build:renderer

      - name: Package macOS app
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then \
            npx electron-builder --mac --arm64 --publish never; \
          else \
            npx electron-builder --mac --x64 --publish never; \
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rd-plan-mac-${{ matrix.arch }}
          path: |
            dist/*.dmg
            dist/*mac*.zip
            dist/*.yml
            dist/*.blockmap

      - name: Create/Update GitHub Release (attach artifacts)
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          fail_on_unmatched_files: false
          files: |
            dist/*.dmg
            dist/*mac*.zip
            dist/*.yml
            dist/*.blockmap
