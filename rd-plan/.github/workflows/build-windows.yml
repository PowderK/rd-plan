name: build-windows

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Visual Studio Build Tools with Windows SDK
        run: choco install visualstudio2022buildtools --package-parameters="--add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --includeRecommended --includeOptional" --yes --no-progress

      - name: Ensure Windows SDK is available (best-effort)
        shell: pwsh
        continue-on-error: true
        run: |
          choco install windows-sdk-10-version-2004-all --yes --no-progress
          choco install windows-sdk-10.1 --yes --no-progress

      - name: Setup MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          vsversion: '2022'

      - name: Install dependencies
        run: npm ci --fetch-timeout=600000 --cache-max=0

      - name: Prefetch Electron headers for node-gyp (with retry)
        shell: bash
        run: |
          for i in {1..3}; do
            npx node-gyp install --target=28.3.3 --dist-url=https://electronjs.org/headers && break || sleep 5;
          done

      - name: Rebuild native deps for Electron (better-sqlite3)
        shell: bash
        run: |
          for i in {1..3}; do
            npx electron-rebuild -f -w better-sqlite3 --version=28.3.3 && break || sleep 5;
          done

      - name: Clean dist folder (cross-platform)
        shell: bash
        run: node -e "require('fs').rmSync('dist',{recursive:true,force:true})"

      - name: Debug TypeScript setup
        shell: bash
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing source files:"
          find src -name "*.ts" -type f | head -20
          echo "TypeScript config:"
          cat tsconfig.main.json
          echo "Package.json build script:"
          grep -A 1 "build:main" package.json

      - name: Build (TypeScript main)
        run: npm run build:main

      - name: Build (Vite renderer)
        run: npm run build:renderer

      - name: Package Windows executable (portable)
        run: npm run dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rd-plan-windows
          path: |
            dist/*.exe
            dist/*win*.zip
            dist/*.yml
            dist/*.blockmap

      - name: Create GitHub Release (pre-release) and upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          fail_on_unmatched_files: false
          files: |
            dist/*.exe
            dist/*win*.zip
            dist/*.yml
            dist/*.blockmap
